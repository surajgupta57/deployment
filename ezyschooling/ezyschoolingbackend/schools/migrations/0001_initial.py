# Generated by Django 2.2.10 on 2020-03-26 12:55

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import schools.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=80)),
                ('admission_description', models.TextField(blank=True, max_length=3000, null=True)),
                ('slug', models.SlugField(blank=True, max_length=120, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolBoard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=120, null=True)),
            ],
            options={
                'verbose_name': 'School Board',
                'verbose_name_plural': 'School Boards',
            },
        ),
        migrations.CreateModel(
            name='SchoolClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=120, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'School Class',
                'verbose_name_plural': 'School Classes',
            },
        ),
        migrations.CreateModel(
            name='SchoolProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('short_name', models.CharField(blank=True, max_length=5, null=True)),
                ('sort_id', models.IntegerField(blank=True, db_index=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('phone_no', models.CharField(blank=True, max_length=255, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('school_timings', models.CharField(blank=True, max_length=254, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=16, max_digits=22, null=True)),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=7, null=True)),
                ('logo', models.ImageField(blank=True, default='school-logo/school.png', null=True, upload_to='school-logo/')),
                ('collab', models.BooleanField(blank=True, db_index=True, default=False, null=True)),
                ('rank', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('year_established', models.CharField(blank=True, max_length=254, null=True)),
                ('school_category', models.CharField(blank=True, choices=[('Girls', 'Girls'), ('Boys', 'Boys'), ('Coed', 'Coed')], default='Coed', max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('student_teacher_ratio', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(blank=True, db_index=True, default=True, null=True)),
                ('form_price', models.IntegerField(blank=True, default=0, null=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='school-video/')),
                ('point_system', models.BooleanField(default=True)),
                ('required_admission_form_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=schools.utils.default_required_admission_form_fields, null=True)),
                ('required_child_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=schools.utils.default_required_child_fields, null=True)),
                ('required_father_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=schools.utils.default_required_father_fields, null=True)),
                ('required_mother_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=schools.utils.default_required_mother_fields, null=True)),
                ('required_guardian_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=schools.utils.default_required_guardian_fields, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_relation', models.ManyToManyField(blank=True, to='schools.SchoolClasses')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.Region')),
                ('school_board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.SchoolBoard')),
            ],
            options={
                'verbose_name': 'School Profile',
                'verbose_name_plural': 'School Profiles',
            },
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=120, null=True)),
            ],
            options={
                'verbose_name': 'School Type',
                'verbose_name_plural': 'School Types',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(blank=True, max_length=120, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_views', to='schools.SchoolProfile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'School View',
                'verbose_name_plural': 'School Views',
            },
        ),
        migrations.AddField(
            model_name='schoolprofile',
            name='school_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.SchoolType'),
        ),
        migrations.AddField(
            model_name='schoolprofile',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.State'),
        ),
        migrations.AddField(
            model_name='schoolprofile',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SchoolPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('single_child_points', models.IntegerField(blank=True, default=0, null=True)),
                ('siblings_points', models.IntegerField(blank=True, default=0, null=True)),
                ('parent_alumni_points', models.IntegerField(blank=True, default=0, null=True)),
                ('staff_ward_points', models.IntegerField(blank=True, default=0, null=True)),
                ('first_born_child_points', models.IntegerField(blank=True, default=0, null=True)),
                ('first_girl_child_points', models.IntegerField(blank=True, default=0, null=True)),
                ('single_girl_child_points', models.IntegerField(blank=True, default=0, null=True)),
                ('is_christian_points', models.IntegerField(blank=True, default=0, null=True)),
                ('girl_child_points', models.IntegerField(blank=True, default=0, null=True)),
                ('single_parent_points', models.IntegerField(blank=True, default=0, null=True)),
                ('minority_points', models.IntegerField(blank=True, default=0, null=True)),
                ('student_with_special_needs_points', models.IntegerField(blank=True, default=0, null=True)),
                ('children_of_armed_force_points', models.IntegerField(blank=True, default=0, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='schools.SchoolProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, help_text="Please compress the images before uploading using this <a href='https://www.iloveimg.com/compress-image'>tool</a>.", null=True, upload_to='school-gallery/')),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='schools.SchoolProfile')),
            ],
            options={
                'verbose_name': 'School Gallery',
                'verbose_name_plural': 'School Gallery',
            },
        ),
        migrations.CreateModel(
            name='FeeStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('draft', models.BooleanField()),
                ('fee_price', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolClasses')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolProfile')),
            ],
            options={
                'verbose_name': 'School Fee Structure',
                'verbose_name_plural': 'School Fee Structure',
            },
        ),
        migrations.CreateModel(
            name='DistancePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.IntegerField()),
                ('end', models.IntegerField()),
                ('point', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolProfile')),
            ],
            options={
                'verbose_name': 'School Distance Point',
                'verbose_name_plural': 'School Distance Points',
            },
        ),
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=15)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='schools.SchoolProfile')),
            ],
            options={
                'verbose_name': 'School Contact',
                'verbose_name_plural': 'School Contacts',
            },
        ),
        migrations.CreateModel(
            name='AdmmissionOpenClasses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_open', models.BooleanField(default=False)),
                ('form_limit', models.IntegerField(default=10000)),
                ('draft', models.BooleanField()),
                ('available_seats', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_relation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolClasses')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.SchoolProfile')),
            ],
            options={
                'verbose_name': 'School Admmission Open Classes',
                'verbose_name_plural': 'School Admmission Open Classes',
            },
        ),
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities_type', to='schools.SchoolProfile')),
            ],
            options={
                'verbose_name': 'School Activity Type',
                'verbose_name_plural': 'School Activities Types',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='schools.ActivityType')),
            ],
            options={
                'verbose_name': 'School Activity',
                'verbose_name_plural': 'School Activities',
                'ordering': ('order', 'id'),
            },
        ),
    ]
